name: Check PR

on:
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files_ignore: |
            README.md
            ci/**
            .github/**
      - name: List all changed files
        id: list_changed_files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          ALL_MODIFIED_FILES_COUNT: ${{ steps.changed-files.outputs.all_modified_files_count }}
        run: |
          echo "${ALL_MODIFIED_FILES_COUNT} files"
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
      - name: auto_pass
        if: steps.changed-files.outputs.all_modified_files_count == '0'
        id: check_if_only_ignored
        run: |
          echo "msg=Version bump not required." >> $GITHUB_OUTPUT
          exit 0
        
      - name: Get version from file
        if: steps.changed-files.outputs.all_modified_files_count != '0'
        id: get_version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: 'Get Previous tag'
        if: steps.changed-files.outputs.all_modified_files_count != '0'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1.4.0"

      - name: Checking for version bump
        if: steps.changed-files.outputs.all_modified_files_count != '0'
        id: check_vbump
        run: |
          LAST_TAG="${{ steps.previoustag.outputs.tag }}"
          NEW_TAG="v${{ steps.get_version.outputs.version }}"
          RESULT=$(ci/assets/checksemver.sh ${NEW_TAG} ${LAST_TAG})
          if [ "${RESULT}" == "1" ]; then
            echo "msg=Version bump found." >> $GITHUB_OUTPUT
            exit 0
          elif [ "${RESULT}" == "0" ]; then
            echo "msg=Version bump did not happen. ${LAST_TAG} is the same as ${NEW_TAG}" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "msg=Version bump did not happen. ${LAST_TAG} is higher than ${NEW_TAG}" >> $GITHUB_OUTPUT
            exit 1
          fi
      - id: pr
        run: |
          issue=$(gh pr list --search "${{ github.sha }}" --state open --json number --jq ".[0].number")
          echo "issue=$issue" >>$GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: mshick/add-pr-comment@v2.8.2
        if: always()
        continue-on-error: true # Currently this resource doesn't work as is with forks
        with:
          issue: ${{ steps.pr.outputs.issue }}
          message: |
            ${{ steps.check_if_only_ignored.outputs.msg || steps.check_vbump.outputs.msg }}